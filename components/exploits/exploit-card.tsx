import { Exploit } from "@/lib/types"
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { formatCurrency } from "@/lib/utils"
import { AlertTriangle, Calendar, DollarSign, ExternalLink } from "lucide-react"
import { Button } from "@/components/ui/button"
import Link from "next/link"

interface ExploitCardProps {
  exploit: Exploit
}

export function ExploitCard({ exploit }: ExploitCardProps) {
  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case "Critical":
        return "bg-destructive text-destructive-foreground"
      case "High":
        return "bg-chart-5 text-white"
      case "Medium":
        return "bg-chart-4 text-black"
      case "Low":
        return "bg-chart-2 text-white"
      default:
        return "bg-muted text-muted-foreground"
    }
  }

  const getStatusColor = (status: string) => {
    switch (status) {
      case "Confirmed":
        return "bg-destructive text-destructive-foreground"
      case "Suspected":
        return "bg-yellow-500 text-black"
      case "Resolved":
        return "bg-green-600 text-white"
      case "Funds Recovered":
        return "bg-green-700 text-white"
      case "Ongoing Investigation":
        return "bg-blue-600 text-white"
      default:
        return "bg-muted text-muted-foreground"
    }
  }

  return (
    <Card className="h-full flex flex-col transition-all hover:shadow-md">
      <CardHeader>
        <div className="flex justify-between">
          <div>
            <CardTitle className="text-xl mb-1">{exploit.projectName}</CardTitle>
            <CardDescription>{exploit.name}</CardDescription>
          </div>
          <Badge className={getSeverityColor(exploit.severity)}>
            {exploit.severity}
          </Badge>
        </div>
      </CardHeader>
      <CardContent className="flex-1">
        <div className="flex items-center gap-2 text-sm text-muted-foreground mb-3">
          <Calendar className="h-4 w-4" />
          <span>
            {new Date(exploit.date).toLocaleDateString("en-US", {
              year: "numeric",
              month: "short",
              day: "numeric",
            })}
          </span>
        </div>
        <div className="flex items-center gap-2 text-sm mb-4">
          <AlertTriangle className="h-4 w-4 text-chart-5" />
          <span>{exploit.type}</span>
        </div>
        <div className="flex items-center gap-2 text-sm mb-4">
          <DollarSign className="h-4 w-4 text-chart-1" />
          <span>{formatCurrency(exploit.fundsLost)}</span>
        </div>
        <p className="text-sm text-muted-foreground line-clamp-3 mb-4">
          {exploit.description}
        </p>
        <Badge className={getStatusColor(exploit.status)}>{exploit.status}</Badge>
      </CardContent>
      <CardFooter className="pt-2">
        <Button variant="outline" size="sm" className="w-full" asChild>
          <Link href={`/exploits/${exploit.id}`}>
            View Details <ExternalLink className="ml-2 h-3 w-3" />
          </Link>
        </Button>
      </CardFooter>
    </Card>
  )
}