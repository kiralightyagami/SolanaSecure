"use client"

import { useState } from "react"
import { exploits } from "@/lib/data"
import { ExploitCard } from "@/components/exploits/exploit-card"
import { ExploitFilters } from "@/components/exploits/exploit-filter"
import { Input } from "@/components/ui/input"
import { Exploit } from "@/lib/types"
import { Search } from "lucide-react"

export default function ExploitsPage() {
  const [searchQuery, setSearchQuery] = useState("")
  const [filters, setFilters] = useState({
    type: "",
    severity: "",
    status: "",
  })

  
  const filteredExploits = exploits.filter((exploit) => {
    
    const searchLower = searchQuery.toLowerCase()
    const matchesSearch =
      searchQuery === "" ||
      exploit.name.toLowerCase().includes(searchLower) ||
      exploit.projectName.toLowerCase().includes(searchLower) ||
      exploit.description.toLowerCase().includes(searchLower)

    
    const matchesType = filters.type === "" || exploit.type === filters.type

    
    const matchesSeverity =
      filters.severity === "" || exploit.severity === filters.severity

    const matchesStatus =
      filters.status === "" || exploit.status === filters.status

    return matchesSearch && matchesType && matchesSeverity && matchesStatus
  })

  return (
    <div className="space-y-8">
      <div className="space-y-4">
        <h1 className="text-4xl font-bold tracking-tight">Exploits Catalog</h1>
        <p className="text-muted-foreground">
          Browse and search through all documented security incidents
        </p>
      </div>

      <div className="flex flex-col space-y-4 sm:flex-row sm:space-y-0 sm:space-x-4">
        <div className="relative flex-1">
          <Search className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
          <Input
            placeholder="Search exploits..."
            className="pl-10"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
          />
        </div>
        <ExploitFilters
          filters={filters}
          onFilterChange={setFilters}
        />
      </div>

      {filteredExploits.length === 0 ? (
        <div className="text-center py-12">
          <h3 className="text-lg font-medium">No exploits found</h3>
          <p className="text-muted-foreground mt-2">
            Try adjusting your search or filters
          </p>
        </div>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredExploits.map((exploit) => (
            <ExploitCard key={exploit.id} exploit={exploit} />
          ))}
        </div>
      )}
    </div>
  )
}